//variables
$gutter-width: 1140px; //convert it to rem
$gutter-vertical: 80px;
$gutter-vertical-small: 60px;
$gutter-horizontal: 60px;
$col-1-of-3-width: calc((100% - 2 *#{$gutter-horizontal}) / 3);
$col-1-of-4-width: calc((100% - 3 *#{$gutter-horizontal}) / 4);

//media queries
@mixin respond($breakpoint) {
  @if (breakpoint == phone) {
    @media (max-width: 600px) {
      @content;
    }
  }

  @if (breakpoint == tab-port) {
    @media (max-width: 900px) {
      @content;
    }
  }

  @if (breakpoint == tab-land) {
    @media (max-width: 1200px) {
      @content;
    }
  }

  @if (breakpoint == big-screen) {
    @media (max-width: 1800px) {
      @content;
    }
  }
}

//mixins are functions in css
@mixin clearfix() {
  &::after {
    content: "";
    clear: both;
    display: table;
  }
}

//attributes selector is used for selecting mutiple attributes that start(^) , contain (*) or end with ($)
[class^="col-"] {
  float: left;

  &:not(:last-child) {
    margin-right: $gutter-horizontal;

    @include respond(tab-port) {
      margin-right: 0;
    }
  }

  @include respond(tab-port) {
    width: 100% !important;
  }
}
.row {
  max-width: $gutter-width;
  margin: 0 auto;

  @include clearfix();

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
    float: left;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  .col-1-of-3 {
    $col-1-of-3-width: calc((100% - 2 *#{$gutter-horizontal}) / 3);
    width: $col-1-of-3-width;
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  .col-2-of-3 {
    width: calc(2 *#{$col-1-of-3-width} + #{$gutter-horizontal});
  }

  .col-1-of-4 {
    width: $col-1-of-4-width;
  }

  .col-2-of-4 {
    width: calc(2 *#{$col-1-of-4-width} + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(3 *#{$col-1-of-4-width} + 2 *#{$gutter-horizontal});
  }
}
